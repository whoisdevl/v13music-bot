import { ExtractorPlugin, Song, Playlist } from 'distube';
import { GuildMember } from 'discord.js';

declare type ElementOf<A> = A extends readonly (infer T)[] ? T : never;
declare const SEARCH_SUPPORT: readonly ["track", "playlist"];
declare class SoundCloudPlugin extends ExtractorPlugin {
    static search(query: string, type?: ElementOf<typeof SEARCH_SUPPORT>, limit?: number): Promise<Song<unknown>[] | Playlist<unknown>[]>;
    search(query: string, type?: ElementOf<typeof SEARCH_SUPPORT>, limit?: number): Promise<Song<unknown>[] | Playlist<unknown>[]>;
    validate(url: string): Promise<boolean>;
    resolve(url: string, options: {
        member?: GuildMember;
        metadata?: any;
    }): Promise<Playlist<any> | Song<any>>;
    getRelatedSongs(url: string | number): Promise<Song<unknown>[]>;
    getStreamURL(url: string): Promise<string>;
}

export { SoundCloudPlugin, SoundCloudPlugin as default };
